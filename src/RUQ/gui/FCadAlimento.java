/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RUQ.gui;

import RUQ.modelo.Alimento;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author Isaias
 */
public class FCadAlimento extends javax.swing.JFrame {

    /**
     * Creates new form FCadAlimento
     */
    public FCadAlimento() {
        initComponents();
    }
    DefaultListModel modelAlimentos = new DefaultListModel();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtNomeAlimento = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        btAddAlimento = new javax.swing.JButton();
        btRemoverAlimento = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListAlimentos = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Alimento v0.9.1  12Abr2015");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jScrollPane1.setViewportView(txtNomeAlimento);

        jLabel1.setText("Nome do Alimento");

        btAddAlimento.setText("+");
        btAddAlimento.setToolTipText("Adicionar alimento ao sistema");
        btAddAlimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddAlimentoActionPerformed(evt);
            }
        });

        btRemoverAlimento.setText("-");
        btRemoverAlimento.setToolTipText("Remover o alimento Selecionado");
        btRemoverAlimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverAlimentoActionPerformed(evt);
            }
        });

        jListAlimentos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Carregando..." };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListAlimentos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListAlimentos.setToolTipText("");
        jScrollPane3.setViewportView(jListAlimentos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btRemoverAlimento)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btAddAlimento)))
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAddAlimento))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRemoverAlimento))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAddAlimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddAlimentoActionPerformed
        this.setCursor(Cursor.WAIT_CURSOR);
        Alimento alimento = new Alimento();
        alimento.setNome(txtNomeAlimento.getText());
        JOptionPane.showMessageDialog(this, cadastrarAlimento(alimento));
        txtNomeAlimento.setText("");
        listarAlimentos();
        this.setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_btAddAlimentoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Obter os alimentos cadastrados
        listarAlimentos();
    }//GEN-LAST:event_formWindowOpened

    private void btRemoverAlimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverAlimentoActionPerformed
        if( jListAlimentos.getSelectedIndex() == -1)
        {return;}
        this.setCursor(Cursor.WAIT_CURSOR);
        Alimento alimento = new Alimento();
        alimento.setNome(jListAlimentos.getSelectedValue().toString());
        JOptionPane.showMessageDialog(this, apagarAlimento(alimento));
        listarAlimentos();
        this.setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_btRemoverAlimentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FCadAlimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FCadAlimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FCadAlimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FCadAlimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FCadAlimento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddAlimento;
    private javax.swing.JButton btRemoverAlimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jListAlimentos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane txtNomeAlimento;
    // End of variables declaration//GEN-END:variables

Connection c = null;
Statement stmt = null;
   //TODO: MOVER ESSES METODOS PRO CONTROLE!
    public String cadastrarAlimento(Alimento al){
        try 
        {
            //banco de dados
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:dzero.db");
            c.setAutoCommit(false); //desliga transacao automatica
            stmt = c.createStatement(); //prepara a query

            //Obs, os \" s√£o para as aspas fazer parte da string
            String sql = "INSERT INTO TblAlimento VALUES (@idalimento,\""+ al.getNome() +"\");";

            stmt.executeUpdate(sql);
            stmt.close();
            c.commit();
            c.close();
            return "Alimento Cadastrado";
        } 
        catch (ClassNotFoundException | SQLException e) {
            return "0 - ERRO AO CADASTRAR USUARIO : " + e.toString();
        }
    }
    public void listarAlimentos(){
        DefaultListModel modelListaAlimentos = new DefaultListModel();
        Alimento al = null;
        try 
        {
            //banco de dados
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:dzero.db");
            stmt = c.createStatement(); //prepara a query
            //Obs, os \" s√£o para as aspas fazer parte da string
            String sql = "SELECT NomeAlimento FROM TblAlimento;";
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) 
            {
                //txAreaAlimento.setText(txAreaAlimento.getText() + al.getNome() + "\n");
                modelListaAlimentos.addElement(rs.getString("NomeAlimento"));
            }
            jListAlimentos.setModel(modelListaAlimentos);
            stmt.close();
        } 
        catch (ClassNotFoundException | SQLException e) 
        {
                JOptionPane.showMessageDialog(this, "0 - ERRO AO LISTAR USUARIOS : " + e.toString());
        }

    }
    public String apagarAlimento (Alimento al){
        try {
            //banco de dados
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:dzero.db");
            c.setAutoCommit(false);
            stmt = c.createStatement(); //prepara a query
            //Obs, os \" s√£o para as aspas fazer parte da string
            String sql = "DELETE FROM TblAlimento Where NomeAlimento = \"" + al.getNome()+"\";";
            
            int linhasAfetadas = stmt.executeUpdate(sql);
            stmt.close();
            c.commit();
            return "1 - Alteracoes realizadas";

        } catch (Exception e) {
            return "0 - Falha ao deletar alimento " + e.toString();
        }

    }
	
}
